(function (adminjs, React$1, designSystem) {
  'use strict';

  function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

  var React__default = /*#__PURE__*/_interopDefault(React$1);

  const AdminDashboard = () => {
    const [stats, setStats] = React$1.useState(null);
    const [loading, setLoading] = React$1.useState(true);
    const [error, setError] = React$1.useState(null);
    React$1.useEffect(() => {
      fetchStats();
    }, []);
    const fetchStats = async () => {
      try {
        const response = await fetch('/api/dashboard-stats');
        if (!response.ok) {
          throw new Error('Failed to fetch statistics');
        }
        const data = await response.json();
        setStats(data);
      } catch (err) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };
    if (loading) {
      return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
        variant: "white",
        p: "xxl"
      }, /*#__PURE__*/React__default.default.createElement(designSystem.Loader, null));
    }
    if (error) {
      return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
        variant: "white",
        p: "xxl"
      }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
        color: "error"
      }, error));
    }
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, null, /*#__PURE__*/React__default.default.createElement(designSystem.H3, {
      mb: "xl"
    }, "Admin Dashboard"), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      display: "grid",
      gridTemplateColumns: "repeat(auto-fit, minmax(250px, 1fr))",
      gridGap: "lg"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      variant: "white",
      p: "xl",
      border: "default",
      borderRadius: "lg",
      boxShadow: "card"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H5, {
      color: "grey60",
      mb: "default"
    }, "Total Users"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "xxl",
      fontWeight: "bold",
      color: "primary100"
    }, stats?.totalUsers || 0), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "sm",
      color: "grey60",
      mt: "sm"
    }, "Registered users in the system")), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      variant: "white",
      p: "xl",
      border: "default",
      borderRadius: "lg",
      boxShadow: "card"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H5, {
      color: "grey60",
      mb: "default"
    }, "Total Products"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "xxl",
      fontWeight: "bold",
      color: "success"
    }, stats?.totalProducts || 0), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "sm",
      color: "grey60",
      mt: "sm"
    }, "Products in catalog")), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      variant: "white",
      p: "xl",
      border: "default",
      borderRadius: "lg",
      boxShadow: "card"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H5, {
      color: "grey60",
      mb: "default"
    }, "Total Orders"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "xxl",
      fontWeight: "bold",
      color: "accent"
    }, stats?.totalOrders || 0), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "sm",
      color: "grey60",
      mt: "sm"
    }, "Orders placed")), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      variant: "white",
      p: "xl",
      border: "default",
      borderRadius: "lg",
      boxShadow: "card"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H5, {
      color: "grey60",
      mb: "default"
    }, "Total Revenue"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "xxl",
      fontWeight: "bold",
      color: "success"
    }, "$", stats?.totalRevenue?.toFixed(2) || '0.00'), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "sm",
      color: "grey60",
      mt: "sm"
    }, "From paid orders"))), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      variant: "white",
      mt: "xl",
      p: "xl",
      border: "default",
      borderRadius: "lg"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H5, {
      mb: "default"
    }, "System Information"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "sm",
      color: "grey80"
    }, "Welcome to the eCommerce Admin Dashboard. Here you can manage users, products, categories, orders, and system settings.")));
  };

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function getAugmentedNamespace(n) {
    if (n.__esModule) return n;
    var f = n.default;
  	if (typeof f == "function") {
  		var a = function a () {
  			if (this instanceof a) {
          return Reflect.construct(f, arguments, this.constructor);
  			}
  			return f.apply(this, arguments);
  		};
  		a.prototype = f.prototype;
    } else a = {};
    Object.defineProperty(a, '__esModule', {value: true});
  	Object.keys(n).forEach(function (k) {
  		var d = Object.getOwnPropertyDescriptor(n, k);
  		Object.defineProperty(a, k, d.get ? d : {
  			enumerable: true,
  			get: function () {
  				return n[k];
  			}
  		});
  	});
  	return a;
  }

  var styledComponents_browser_cjs = {};

  /******************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */
  /* global Reflect, Promise, SuppressedError, Symbol */

  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
  };
  function __extends(d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  }
  var __assign = function () {
    __assign = Object.assign || function __assign(t) {
      for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
      return t;
    };
    return __assign.apply(this, arguments);
  };
  function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
  }
  function __decorate(decorators, target, key, desc) {
    var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  }
  function __param(paramIndex, decorator) {
    return function (target, key) {
      decorator(target, key, paramIndex);
    };
  }
  function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
    function accept(f) {
      if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected");
      return f;
    }
    var kind = contextIn.kind,
      key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
    var _,
      done = false;
    for (var i = decorators.length - 1; i >= 0; i--) {
      var context = {};
      for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
      for (var p in contextIn.access) context.access[p] = contextIn.access[p];
      context.addInitializer = function (f) {
        if (done) throw new TypeError("Cannot add initializers after decoration has completed");
        extraInitializers.push(accept(f || null));
      };
      var result = (0, decorators[i])(kind === "accessor" ? {
        get: descriptor.get,
        set: descriptor.set
      } : descriptor[key], context);
      if (kind === "accessor") {
        if (result === void 0) continue;
        if (result === null || typeof result !== "object") throw new TypeError("Object expected");
        if (_ = accept(result.get)) descriptor.get = _;
        if (_ = accept(result.set)) descriptor.set = _;
        if (_ = accept(result.init)) initializers.unshift(_);
      } else if (_ = accept(result)) {
        if (kind === "field") initializers.unshift(_);else descriptor[key] = _;
      }
    }
    if (target) Object.defineProperty(target, contextIn.name, descriptor);
    done = true;
  }
  function __runInitializers(thisArg, initializers, value) {
    var useValue = arguments.length > 2;
    for (var i = 0; i < initializers.length; i++) {
      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
    }
    return useValue ? value : void 0;
  }
  function __propKey(x) {
    return typeof x === "symbol" ? x : "".concat(x);
  }
  function __setFunctionName(f, name, prefix) {
    if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
    return Object.defineProperty(f, "name", {
      configurable: true,
      value: prefix ? "".concat(prefix, " ", name) : name
    });
  }
  function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
  }
  function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function (resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function (resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  }
  function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function () {
          if (t[0] & 1) throw t[1];
          return t[1];
        },
        trys: [],
        ops: []
      },
      f,
      y,
      t,
      g;
    return g = {
      next: verb(0),
      "throw": verb(1),
      "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
      return this;
    }), g;
    function verb(n) {
      return function (v) {
        return step([n, v]);
      };
    }
    function step(op) {
      if (f) throw new TypeError("Generator is already executing.");
      while (g && (g = 0, op[0] && (_ = 0)), _) try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2]) _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
      if (op[0] & 5) throw op[1];
      return {
        value: op[0] ? op[1] : void 0,
        done: true
      };
    }
  }
  var __createBinding = Object.create ? function (o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = {
        enumerable: true,
        get: function () {
          return m[k];
        }
      };
    }
    Object.defineProperty(o, k2, desc);
  } : function (o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
  };
  function __exportStar(m, o) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
  }
  function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
      next: function () {
        if (o && i >= o.length) o = void 0;
        return {
          value: o && o[i++],
          done: !o
        };
      }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
  }
  function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o),
      r,
      ar = [],
      e;
    try {
      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    } catch (error) {
      e = {
        error: error
      };
    } finally {
      try {
        if (r && !r.done && (m = i["return"])) m.call(i);
      } finally {
        if (e) throw e.error;
      }
    }
    return ar;
  }

  /** @deprecated */
  function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
  }

  /** @deprecated */
  function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];
    return r;
  }
  function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar) ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
  }
  function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
  }
  function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []),
      i,
      q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
      return this;
    }, i;
    function verb(n) {
      if (g[n]) i[n] = function (v) {
        return new Promise(function (a, b) {
          q.push([n, v, a, b]) > 1 || resume(n, v);
        });
      };
    }
    function resume(n, v) {
      try {
        step(g[n](v));
      } catch (e) {
        settle(q[0][3], e);
      }
    }
    function step(r) {
      r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
    }
    function fulfill(value) {
      resume("next", value);
    }
    function reject(value) {
      resume("throw", value);
    }
    function settle(f, v) {
      if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
    }
  }
  function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) {
      throw e;
    }), verb("return"), i[Symbol.iterator] = function () {
      return this;
    }, i;
    function verb(n, f) {
      i[n] = o[n] ? function (v) {
        return (p = !p) ? {
          value: __await(o[n](v)),
          done: false
        } : f ? f(v) : v;
      } : f;
    }
  }
  function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator],
      i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
      return this;
    }, i);
    function verb(n) {
      i[n] = o[n] && function (v) {
        return new Promise(function (resolve, reject) {
          v = o[n](v), settle(resolve, reject, v.done, v.value);
        });
      };
    }
    function settle(resolve, reject, d, v) {
      Promise.resolve(v).then(function (v) {
        resolve({
          value: v,
          done: d
        });
      }, reject);
    }
  }
  function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) {
      Object.defineProperty(cooked, "raw", {
        value: raw
      });
    } else {
      cooked.raw = raw;
    }
    return cooked;
  }
  var __setModuleDefault = Object.create ? function (o, v) {
    Object.defineProperty(o, "default", {
      enumerable: true,
      value: v
    });
  } : function (o, v) {
    o["default"] = v;
  };
  function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
  }
  function __importDefault(mod) {
    return mod && mod.__esModule ? mod : {
      default: mod
    };
  }
  function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
  }
  function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
  }
  function __classPrivateFieldIn(state, receiver) {
    if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function") throw new TypeError("Cannot use 'in' operator on non-object");
    return typeof state === "function" ? receiver === state : state.has(receiver);
  }
  function __addDisposableResource(env, value, async) {
    if (value !== null && value !== void 0) {
      if (typeof value !== "object" && typeof value !== "function") throw new TypeError("Object expected.");
      var dispose;
      if (async) {
        if (!Symbol.asyncDispose) throw new TypeError("Symbol.asyncDispose is not defined.");
        dispose = value[Symbol.asyncDispose];
      }
      if (dispose === void 0) {
        if (!Symbol.dispose) throw new TypeError("Symbol.dispose is not defined.");
        dispose = value[Symbol.dispose];
      }
      if (typeof dispose !== "function") throw new TypeError("Object not disposable.");
      env.stack.push({
        value: value,
        dispose: dispose,
        async: async
      });
    } else if (async) {
      env.stack.push({
        async: true
      });
    }
    return value;
  }
  var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
    var e = new Error(message);
    return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
  };
  function __disposeResources(env) {
    function fail(e) {
      env.error = env.hasError ? new _SuppressedError(e, env.error, "An error was suppressed during disposal.") : e;
      env.hasError = true;
    }
    function next() {
      while (env.stack.length) {
        var rec = env.stack.pop();
        try {
          var result = rec.dispose && rec.dispose.call(rec.value);
          if (rec.async) return Promise.resolve(result).then(next, function (e) {
            fail(e);
            return next();
          });
        } catch (e) {
          fail(e);
        }
      }
      if (env.hasError) throw env.error;
    }
    return next();
  }
  var tslib_es6 = {
    __extends,
    __assign,
    __rest,
    __decorate,
    __param,
    __metadata,
    __awaiter,
    __generator,
    __createBinding,
    __exportStar,
    __values,
    __read,
    __spread,
    __spreadArrays,
    __spreadArray,
    __await,
    __asyncGenerator,
    __asyncDelegator,
    __asyncValues,
    __makeTemplateObject,
    __importStar,
    __importDefault,
    __classPrivateFieldGet,
    __classPrivateFieldSet,
    __classPrivateFieldIn,
    __addDisposableResource,
    __disposeResources
  };

  var tslib_es6$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    __addDisposableResource: __addDisposableResource,
    get __assign () { return __assign; },
    __asyncDelegator: __asyncDelegator,
    __asyncGenerator: __asyncGenerator,
    __asyncValues: __asyncValues,
    __await: __await,
    __awaiter: __awaiter,
    __classPrivateFieldGet: __classPrivateFieldGet,
    __classPrivateFieldIn: __classPrivateFieldIn,
    __classPrivateFieldSet: __classPrivateFieldSet,
    __createBinding: __createBinding,
    __decorate: __decorate,
    __disposeResources: __disposeResources,
    __esDecorate: __esDecorate,
    __exportStar: __exportStar,
    __extends: __extends,
    __generator: __generator,
    __importDefault: __importDefault,
    __importStar: __importStar,
    __makeTemplateObject: __makeTemplateObject,
    __metadata: __metadata,
    __param: __param,
    __propKey: __propKey,
    __read: __read,
    __rest: __rest,
    __runInitializers: __runInitializers,
    __setFunctionName: __setFunctionName,
    __spread: __spread,
    __spreadArray: __spreadArray,
    __spreadArrays: __spreadArrays,
    __values: __values,
    default: tslib_es6
  });

  var require$$0 = /*@__PURE__*/getAugmentedNamespace(tslib_es6$1);

  function memoize(fn) {
    var cache = Object.create(null);
    return function (arg) {
      if (cache[arg] === undefined) cache[arg] = fn(arg);
      return cache[arg];
    };
  }

  var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|disableRemotePlayback|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

  var isPropValid = /* #__PURE__ */memoize(function (prop) {
    return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111
    /* o */
    && prop.charCodeAt(1) === 110
    /* n */
    && prop.charCodeAt(2) < 91;
  }
  /* Z+1 */
  );

  var emotionIsPropValid_esm = /*#__PURE__*/Object.freeze({
    __proto__: null,
    default: isPropValid
  });

  var require$$1 = /*@__PURE__*/getAugmentedNamespace(emotionIsPropValid_esm);

  //

  var shallowequal = function shallowEqual(objA, objB, compare, compareContext) {
    var ret = compare ? compare.call(compareContext, objA, objB) : void 0;

    if (ret !== void 0) {
      return !!ret;
    }

    if (objA === objB) {
      return true;
    }

    if (typeof objA !== "object" || !objA || typeof objB !== "object" || !objB) {
      return false;
    }

    var keysA = Object.keys(objA);
    var keysB = Object.keys(objB);

    if (keysA.length !== keysB.length) {
      return false;
    }

    var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);

    // Test for A's keys different from B.
    for (var idx = 0; idx < keysA.length; idx++) {
      var key = keysA[idx];

      if (!bHasOwnProperty(key)) {
        return false;
      }

      var valueA = objA[key];
      var valueB = objB[key];

      ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;

      if (ret === false || (ret === void 0 && valueA !== valueB)) {
        return false;
      }
    }

    return true;
  };

  var stylis = {exports: {}};

  (function (module, exports) {
  	(function(e,r){r(exports);})(commonjsGlobal,(function(e){var r="-ms-";var a="-moz-";var c="-webkit-";var n="comm";var t="rule";var s="decl";var i="@page";var u="@media";var o="@import";var l="@charset";var f="@viewport";var p="@supports";var h="@document";var v="@namespace";var b="@keyframes";var d="@font-face";var w="@counter-style";var m="@font-feature-values";var g="@layer";var k="@scope";var $=Math.abs;var x=String.fromCharCode;var E=Object.assign;function y(e,r){return M(e,0)^45?(((r<<2^M(e,0))<<2^M(e,1))<<2^M(e,2))<<2^M(e,3):0}function O(e){return e.trim()}function T(e,r){return (e=r.exec(e))?e[0]:e}function A(e,r,a){return e.replace(r,a)}function C(e,r,a){return e.indexOf(r,a)}function M(e,r){return e.charCodeAt(r)|0}function S(e,r,a){return e.slice(r,a)}function R(e){return e.length}function P(e){return e.length}function z(e,r){return r.push(e),e}function N(e,r){return e.map(r).join("")}function j(e,r){return e.filter((function(e){return !T(e,r)}))}e.line=1;e.column=1;e.length=0;e.position=0;e.character=0;e.characters="";function U(r,a,c,n,t,s,i,u){return {value:r,root:a,parent:c,type:n,props:t,children:s,line:e.line,column:e.column,length:i,return:"",siblings:u}}function _(e,r){return E(U("",null,null,"",null,null,0,e.siblings),e,{length:-e.length},r)}function F(e){while(e.root)e=_(e.root,{children:[e]});z(e,e.siblings);}function I(){return e.character}function L(){e.character=e.position>0?M(e.characters,--e.position):0;if(e.column--,e.character===10)e.column=1,e.line--;return e.character}function D(){e.character=e.position<e.length?M(e.characters,e.position++):0;if(e.column++,e.character===10)e.column=1,e.line++;return e.character}function Y(){return M(e.characters,e.position)}function K(){return e.position}function V(r,a){return S(e.characters,r,a)}function W(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function B(r){return e.line=e.column=1,e.length=R(e.characters=r),e.position=0,[]}function G(r){return e.characters="",r}function H(r){return O(V(e.position-1,X(r===91?r+2:r===40?r+1:r)))}function Z(e){return G(J(B(e)))}function q(r){while(e.character=Y())if(e.character<33)D();else break;return W(r)>2||W(e.character)>3?"":" "}function J(r){while(D())switch(W(e.character)){case 0:z(re(e.position-1),r);break;case 2:z(H(e.character),r);break;default:z(x(e.character),r);}return r}function Q(r,a){while(--a&&D())if(e.character<48||e.character>102||e.character>57&&e.character<65||e.character>70&&e.character<97)break;return V(r,K()+(a<6&&Y()==32&&D()==32))}function X(r){while(D())switch(e.character){case r:return e.position;case 34:case 39:if(r!==34&&r!==39)X(e.character);break;case 40:if(r===41)X(r);break;case 92:D();break}return e.position}function ee(r,a){while(D())if(r+e.character===47+10)break;else if(r+e.character===42+42&&Y()===47)break;return "/*"+V(a,e.position-1)+"*"+x(r===47?r:D())}function re(r){while(!W(Y()))D();return V(r,e.position)}function ae(e){return G(ce("",null,null,null,[""],e=B(e),0,[0],e))}function ce(e,r,a,c,n,t,s,i,u){var o=0;var l=0;var f=s;var p=0;var h=0;var v=0;var b=1;var d=1;var w=1;var m=0;var g="";var k=n;var E=t;var y=c;var O=g;while(d)switch(v=m,m=D()){case 40:if(v!=108&&M(O,f-1)==58){if(C(O+=A(H(m),"&","&\f"),"&\f",$(o?i[o-1]:0))!=-1)w=-1;break}case 34:case 39:case 91:O+=H(m);break;case 9:case 10:case 13:case 32:O+=q(v);break;case 92:O+=Q(K()-1,7);continue;case 47:switch(Y()){case 42:case 47:z(te(ee(D(),K()),r,a,u),u);break;default:O+="/";}break;case 123*b:i[o++]=R(O)*w;case 125*b:case 59:case 0:switch(m){case 0:case 125:d=0;case 59+l:if(w==-1)O=A(O,/\f/g,"");if(h>0&&R(O)-f)z(h>32?se(O+";",c,a,f-1,u):se(A(O," ","")+";",c,a,f-2,u),u);break;case 59:O+=";";default:z(y=ne(O,r,a,o,l,n,i,g,k=[],E=[],f,t),t);if(m===123)if(l===0)ce(O,r,y,y,k,t,f,i,E);else switch(p===99&&M(O,3)===110?100:p){case 100:case 108:case 109:case 115:ce(e,y,y,c&&z(ne(e,y,y,0,0,n,i,g,n,k=[],f,E),E),n,E,f,i,c?k:E);break;default:ce(O,y,y,y,[""],E,0,i,E);}}o=l=h=0,b=w=1,g=O="",f=s;break;case 58:f=1+R(O),h=v;default:if(b<1)if(m==123)--b;else if(m==125&&b++==0&&L()==125)continue;switch(O+=x(m),m*b){case 38:w=l>0?1:(O+="\f",-1);break;case 44:i[o++]=(R(O)-1)*w,w=1;break;case 64:if(Y()===45)O+=H(D());p=Y(),l=f=R(g=O+=re(K())),m++;break;case 45:if(v===45&&R(O)==2)b=0;}}return t}function ne(e,r,a,c,n,s,i,u,o,l,f,p){var h=n-1;var v=n===0?s:[""];var b=P(v);for(var d=0,w=0,m=0;d<c;++d)for(var g=0,k=S(e,h+1,h=$(w=i[d])),x=e;g<b;++g)if(x=O(w>0?v[g]+" "+k:A(k,/&\f/g,v[g])))o[m++]=x;return U(e,r,a,n===0?t:u,o,l,f,p)}function te(e,r,a,c){return U(e,r,a,n,x(I()),S(e,2,-2),0,c)}function se(e,r,a,c,n){return U(e,r,a,s,S(e,0,c),S(e,c+1,-1),c,n)}function ie(e,n,t){switch(y(e,n)){case 5103:return c+"print-"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return c+e+e;case 4789:return a+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return c+e+a+e+r+e+e;case 5936:switch(M(e,n+11)){case 114:return c+e+r+A(e,/[svh]\w+-[tblr]{2}/,"tb")+e;case 108:return c+e+r+A(e,/[svh]\w+-[tblr]{2}/,"tb-rl")+e;case 45:return c+e+r+A(e,/[svh]\w+-[tblr]{2}/,"lr")+e}case 6828:case 4268:case 2903:return c+e+r+e+e;case 6165:return c+e+r+"flex-"+e+e;case 5187:return c+e+A(e,/(\w+).+(:[^]+)/,c+"box-$1$2"+r+"flex-$1$2")+e;case 5443:return c+e+r+"flex-item-"+A(e,/flex-|-self/g,"")+(!T(e,/flex-|baseline/)?r+"grid-row-"+A(e,/flex-|-self/g,""):"")+e;case 4675:return c+e+r+"flex-line-pack"+A(e,/align-content|flex-|-self/g,"")+e;case 5548:return c+e+r+A(e,"shrink","negative")+e;case 5292:return c+e+r+A(e,"basis","preferred-size")+e;case 6060:return c+"box-"+A(e,"-grow","")+c+e+r+A(e,"grow","positive")+e;case 4554:return c+A(e,/([^-])(transform)/g,"$1"+c+"$2")+e;case 6187:return A(A(A(e,/(zoom-|grab)/,c+"$1"),/(image-set)/,c+"$1"),e,"")+e;case 5495:case 3959:return A(e,/(image-set\([^]*)/,c+"$1"+"$`$1");case 4968:return A(A(e,/(.+:)(flex-)?(.*)/,c+"box-pack:$3"+r+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+c+e+e;case 4200:if(!T(e,/flex-|baseline/))return r+"grid-column-align"+S(e,n)+e;break;case 2592:case 3360:return r+A(e,"template-","")+e;case 4384:case 3616:if(t&&t.some((function(e,r){return n=r,T(e.props,/grid-\w+-end/)}))){return ~C(e+(t=t[n].value),"span",0)?e:r+A(e,"-start","")+e+r+"grid-row-span:"+(~C(t,"span",0)?T(t,/\d+/):+T(t,/\d+/)-+T(e,/\d+/))+";"}return r+A(e,"-start","")+e;case 4896:case 4128:return t&&t.some((function(e){return T(e.props,/grid-\w+-start/)}))?e:r+A(A(e,"-end","-span"),"span ","")+e;case 4095:case 3583:case 4068:case 2532:return A(e,/(.+)-inline(.+)/,c+"$1$2")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(R(e)-1-n>6)switch(M(e,n+1)){case 109:if(M(e,n+4)!==45)break;case 102:return A(e,/(.+:)(.+)-([^]+)/,"$1"+c+"$2-$3"+"$1"+a+(M(e,n+3)==108?"$3":"$2-$3"))+e;case 115:return ~C(e,"stretch",0)?ie(A(e,"stretch","fill-available"),n,t)+e:e}break;case 5152:case 5920:return A(e,/(.+?):(\d+)(\s*\/\s*(span)?\s*(\d+))?(.*)/,(function(a,c,n,t,s,i,u){return r+c+":"+n+u+(t?r+c+"-span:"+(s?i:+i-+n)+u:"")+e}));case 4949:if(M(e,n+6)===121)return A(e,":",":"+c)+e;break;case 6444:switch(M(e,M(e,14)===45?18:11)){case 120:return A(e,/(.+:)([^;\s!]+)(;|(\s+)?!.+)?/,"$1"+c+(M(e,14)===45?"inline-":"")+"box$3"+"$1"+c+"$2$3"+"$1"+r+"$2box$3")+e;case 100:return A(e,":",":"+r)+e}break;case 5719:case 2647:case 2135:case 3927:case 2391:return A(e,"scroll-","scroll-snap-")+e}return e}function ue(e,r){var a="";for(var c=0;c<e.length;c++)a+=r(e[c],c,e,r)||"";return a}function oe(e,r,a,c){switch(e.type){case g:if(e.children.length)break;case o:case s:return e.return=e.return||e.value;case n:return "";case b:return e.return=e.value+"{"+ue(e.children,c)+"}";case t:if(!R(e.value=e.props.join(",")))return ""}return R(a=ue(e.children,c))?e.return=e.value+"{"+a+"}":""}function le(e){var r=P(e);return function(a,c,n,t){var s="";for(var i=0;i<r;i++)s+=e[i](a,c,n,t)||"";return s}}function fe(e){return function(r){if(!r.root)if(r=r.return)e(r);}}function pe(e,n,i,u){if(e.length>-1)if(!e.return)switch(e.type){case s:e.return=ie(e.value,e.length,i);return;case b:return ue([_(e,{value:A(e.value,"@","@"+c)})],u);case t:if(e.length)return N(i=e.props,(function(n){switch(T(n,u=/(::plac\w+|:read-\w+)/)){case ":read-only":case ":read-write":F(_(e,{props:[A(n,/:(read-\w+)/,":"+a+"$1")]}));F(_(e,{props:[n]}));E(e,{props:j(i,u)});break;case "::placeholder":F(_(e,{props:[A(n,/:(plac\w+)/,":"+c+"input-$1")]}));F(_(e,{props:[A(n,/:(plac\w+)/,":"+a+"$1")]}));F(_(e,{props:[A(n,/:(plac\w+)/,r+"input-$1")]}));F(_(e,{props:[n]}));E(e,{props:j(i,u)});break}return ""}))}}function he(e){switch(e.type){case t:e.props=e.props.map((function(r){return N(Z(r),(function(r,a,c){switch(M(r,0)){case 12:return S(r,1,R(r));case 0:case 40:case 43:case 62:case 126:return r;case 58:if(c[++a]==="global")c[a]="",c[++a]="\f"+S(c[a],a=1,-1);case 32:return a===1?"":r;default:switch(a){case 0:e=r;return P(c)>1?"":r;case a=P(c)-1:case 2:return a===2?r+e+e:r+e;default:return r}}}))}));}}e.CHARSET=l;e.COMMENT=n;e.COUNTER_STYLE=w;e.DECLARATION=s;e.DOCUMENT=h;e.FONT_FACE=d;e.FONT_FEATURE_VALUES=m;e.IMPORT=o;e.KEYFRAMES=b;e.LAYER=g;e.MEDIA=u;e.MOZ=a;e.MS=r;e.NAMESPACE=v;e.PAGE=i;e.RULESET=t;e.SCOPE=k;e.SUPPORTS=p;e.VIEWPORT=f;e.WEBKIT=c;e.abs=$;e.alloc=B;e.append=z;e.assign=E;e.caret=K;e.char=I;e.charat=M;e.combine=N;e.comment=te;e.commenter=ee;e.compile=ae;e.copy=_;e.dealloc=G;e.declaration=se;e.delimit=H;e.delimiter=X;e.escaping=Q;e.filter=j;e.from=x;e.hash=y;e.identifier=re;e.indexof=C;e.lift=F;e.match=T;e.middleware=le;e.namespace=he;e.next=D;e.node=U;e.parse=ce;e.peek=Y;e.prefix=ie;e.prefixer=pe;e.prev=L;e.replace=A;e.ruleset=ne;e.rulesheet=fe;e.serialize=ue;e.sizeof=P;e.slice=V;e.stringify=oe;e.strlen=R;e.substr=S;e.token=W;e.tokenize=Z;e.tokenizer=J;e.trim=O;e.whitespace=q;Object.defineProperty(e,"__esModule",{value:true});}));
  	
  } (stylis, stylis.exports));

  var stylisExports = stylis.exports;

  var unitlessKeys = {
    animationIterationCount: 1,
    aspectRatio: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    // SVG-related properties
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1
  };

  var emotionUnitless_esm = /*#__PURE__*/Object.freeze({
    __proto__: null,
    default: unitlessKeys
  });

  var require$$5 = /*@__PURE__*/getAugmentedNamespace(emotionUnitless_esm);

  var _default;
  Object.defineProperty(styledComponents_browser_cjs,"__esModule",{value:true});var e=require$$0,t=require$$1,n=React__default.default,r=shallowequal,o=stylisExports,s=require$$5;function i(e){return e&&e.__esModule?e:{default:e}}function a(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach(function(n){if("default"!==n){var r=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,r.get?r:{enumerable:true,get:function(){return e[n]}});}}),t.default=e,Object.freeze(t)}var c=/*#__PURE__*/i(t),u=/*#__PURE__*/i(n),l=/*#__PURE__*/i(r),p=/*#__PURE__*/a(o),d=/*#__PURE__*/i(s),h="undefined"!=typeof process&&void 0!==process.env&&(AdminJS.env.REACT_APP_SC_ATTR||AdminJS.env.SC_ATTR)||"data-styled",f="active",y="data-styled-version",m="6.1.19",v="/*!sc*/\n",g="undefined"!=typeof window&&"undefined"!=typeof document,S=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env&&void 0!==AdminJS.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==AdminJS.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==AdminJS.env.REACT_APP_SC_DISABLE_SPEEDY&&AdminJS.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env&&void 0!==AdminJS.env.SC_DISABLE_SPEEDY&&""!==AdminJS.env.SC_DISABLE_SPEEDY?"false"!==AdminJS.env.SC_DISABLE_SPEEDY&&AdminJS.env.SC_DISABLE_SPEEDY:"production"!=="development"),w={},_=/invalid hook call/i,b=new Set,E=function(t,r){{var o=r?' with the id of "'.concat(r,'"'):"",s="The component ".concat(t).concat(o," has been created dynamically.\n")+"You may see this warning because you've called styled inside another component.\nTo resolve this only create new StyledComponents outside of any render method and function component.\nSee https://styled-components.com/docs/basics#define-styled-components-outside-of-the-render-method for more info.\n",i=console.error;try{var a=!0;console.error=function(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];_.test(t)?(a=!1,b.delete(s)):i.apply(void 0,e.__spreadArray([t],n,!1));},n.useRef(),a&&!b.has(s)&&(console.warn(s),b.add(s));}catch(e){_.test(e.message)&&b.delete(s);}finally{console.error=i;}}},N=Object.freeze([]),P=Object.freeze({});function C(e,t,n){return void 0===n&&(n=P),e.theme!==n.theme&&e.theme||t||n.theme}var A=new Set(["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","track","u","ul","use","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"]),I=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,O=/(^-|-$)/g;function x(e){return e.replace(I,"-").replace(O,"")}var D=/(a)(d)/gi,T=52,R=function(e){return String.fromCharCode(e+(e>25?39:97))};function j(e){var t,n="";for(t=Math.abs(e);t>T;t=t/T|0)n=R(t%T)+n;return (R(t%T)+n).replace(D,"$1-$2")}var k,V=5381,M=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},F=function(e){return M(V,e)};function z(e){return j(F(e)>>>0)}function $(e){return "string"==typeof e&&e||e.displayName||e.name||"Component"}function B(e){return "string"==typeof e&&(e.charAt(0)===e.charAt(0).toLowerCase())}var G="function"==typeof Symbol&&Symbol.for,L=G?Symbol.for("react.memo"):60115,q=G?Symbol.for("react.forward_ref"):60112,Y={childContextTypes:true,contextType:true,contextTypes:true,defaultProps:true,displayName:true,getDefaultProps:true,getDerivedStateFromError:true,getDerivedStateFromProps:true,mixins:true,propTypes:true,type:true},W={name:true,length:true,prototype:true,caller:true,callee:true,arguments:true,arity:true},H={$$typeof:true,compare:true,defaultProps:true,displayName:true,propTypes:true,type:true},U=((k={})[q]={$$typeof:true,render:true,defaultProps:true,displayName:true,propTypes:true},k[L]=H,k);function J(e){return ("type"in(t=e)&&t.type.$$typeof)===L?H:"$$typeof"in e?U[e.$$typeof]:Y;var t;}var X=Object.defineProperty,Z=Object.getOwnPropertyNames,K=Object.getOwnPropertySymbols,Q=Object.getOwnPropertyDescriptor,ee=Object.getPrototypeOf,te=Object.prototype;function ne(e,t,n){if("string"!=typeof t){if(te){var r=ee(t);r&&r!==te&&ne(e,r,n);}var o=Z(t);K&&(o=o.concat(K(t)));for(var s=J(e),i=J(t),a=0;a<o.length;++a){var c=o[a];if(!(c in W||n&&n[c]||i&&c in i||s&&c in s)){var u=Q(t,c);try{X(e,c,u);}catch(e){}}}}return e}function re(e){return "function"==typeof e}function oe(e){return "object"==typeof e&&"styledComponentId"in e}function se(e,t){return e&&t?"".concat(e," ").concat(t):e||t||""}function ie(e,t){if(0===e.length)return "";for(var n=e[0],r=1;r<e.length;r++)n+=t?t+e[r]:e[r];return n}function ae(e){return null!==e&&"object"==typeof e&&e.constructor.name===Object.name&&!("props"in e&&e.$$typeof)}function ce(e,t,n){if(void 0===n&&(n=false),!n&&!ae(e)&&!Array.isArray(e))return t;if(Array.isArray(t))for(var r=0;r<t.length;r++)e[r]=ce(e[r],t[r]);else if(ae(t))for(var r in t)e[r]=ce(e[r],t[r]);return e}function ue(e,t){Object.defineProperty(e,"toString",{value:t});}var le={1:"Cannot create styled-component for component: %s.\n\n",2:"Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n\n",3:"Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n",4:"The `StyleSheetManager` expects a valid target or sheet prop!\n\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n\n",5:"The clone method cannot be used on the client!\n\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n\n",6:"Trying to insert a new style tag, but the given Node is unmounted!\n\n- Are you using a custom target that isn't mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n\n",7:'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n',8:'ThemeProvider: Please make your "theme" prop an object.\n\n',9:"Missing document `<head>`\n\n",10:"Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021\n\n",11:"_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.\n\n",12:"It seems you are interpolating a keyframe declaration (%s) into an untagged string. This was supported in styled-components v3, but is not longer supported in v4 as keyframes are now injected on-demand. Please wrap your string in the css\\`\\` helper which ensures the styles are injected correctly. See https://www.styled-components.com/docs/api#css\n\n",13:"%s is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.\n\n",14:'ThemeProvider: "theme" prop is required.\n\n',15:"A stylis plugin has been supplied that is not named. We need a name for each plugin to be able to prevent styling collisions between different stylis configurations within the same app. Before you pass your plugin to `<StyleSheetManager stylisPlugins={[]}>`, please make sure each plugin is uniquely-named, e.g.\n\n```js\nObject.defineProperty(importedPlugin, 'name', { value: 'some-unique-name' });\n```\n\n",16:"Reached the limit of how many styled components may be created at group %s.\nYou may only create up to 1,073,741,824 components. If you're creating components dynamically,\nas for instance in your render method then you may be running into this limitation.\n\n",17:"CSSStyleSheet could not be found on HTMLStyleElement.\nHas styled-components' style tag been unmounted or altered by another script?\n",18:"ThemeProvider: Please make sure your useTheme hook is within a `<ThemeProvider>`"};function pe(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var n=e[0],r=[],o=1,s=e.length;o<s;o+=1)r.push(e[o]);return r.forEach(function(e){n=n.replace(/%[a-z]/,e);}),n}function de(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];return new Error(pe.apply(void 0,e.__spreadArray([le[t]],n,false)).trim())}var he=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e;}return e.prototype.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},e.prototype.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,o=r;e>=o;)if((o<<=1)<0)throw de(16,"".concat(e));this.groupSizes=new Uint32Array(o),this.groupSizes.set(n),this.length=o;for(var s=r;s<o;s++)this.groupSizes[s]=0;}for(var i=this.indexOfGroup(e+1),a=(s=0,t.length);s<a;s++)this.tag.insertRule(i,t[s])&&(this.groupSizes[e]++,i++);},e.prototype.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var o=n;o<r;o++)this.tag.deleteRule(n);}},e.prototype.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),o=r+n,s=r;s<o;s++)t+="".concat(this.tag.getRule(s)).concat(v);return t},e}(),fe=1<<30,ye=new Map,me=new Map,ve=1,ge=function(e){if(ye.has(e))return ye.get(e);for(;me.has(ve);)ve++;var t=ve++;if(((0|t)<0||t>fe))throw de(16,"".concat(t));return ye.set(e,t),me.set(t,e),t},Se=function(e,t){ve=t+1,ye.set(e,t),me.set(t,e);},we="style[".concat(h,"][").concat(y,'="').concat(m,'"]'),_e=new RegExp("^".concat(h,'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)')),be=function(e,t,n){for(var r,o=n.split(","),s=0,i=o.length;s<i;s++)(r=o[s])&&e.registerName(t,r);},Ee=function(e,t){for(var n,r=(null!==(n=t.textContent)&&void 0!==n?n:"").split(v),o=[],s=0,i=r.length;s<i;s++){var a=r[s].trim();if(a){var c=a.match(_e);if(c){var u=0|parseInt(c[1],10),l=c[2];0!==u&&(Se(l,u),be(e,l,c[3]),e.getTag().insertRules(u,o)),o.length=0;}else o.push(a);}}},Ne=function(e){for(var t=document.querySelectorAll(we),n=0,r=t.length;n<r;n++){var o=t[n];o&&o.getAttribute(h)!==f&&(Ee(e,o),o.parentNode&&o.parentNode.removeChild(o));}};function Pe(){return "undefined"!=typeof __webpack_nonce__?__webpack_nonce__:null}var Ce=function(e){var t=document.head,n=e||t,r=document.createElement("style"),o=function(e){var t=Array.from(e.querySelectorAll("style[".concat(h,"]")));return t[t.length-1]}(n),s=void 0!==o?o.nextSibling:null;r.setAttribute(h,f),r.setAttribute(y,m);var i=Pe();return i&&r.setAttribute("nonce",i),n.insertBefore(r,s),r},Ae=function(){function e(e){this.element=Ce(e),this.element.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var o=t[n];if(o.ownerNode===e)return o}throw de(17)}(this.element),this.length=0;}return e.prototype.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return  false}},e.prototype.deleteRule=function(e){this.sheet.deleteRule(e),this.length--;},e.prototype.getRule=function(e){var t=this.sheet.cssRules[e];return t&&t.cssText?t.cssText:""},e}(),Ie=function(){function e(e){this.element=Ce(e),this.nodes=this.element.childNodes,this.length=0;}return e.prototype.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t);return this.element.insertBefore(n,this.nodes[e]||null),this.length++,true}return  false},e.prototype.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--;},e.prototype.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),Oe=function(){function e(e){this.rules=[],this.length=0;}return e.prototype.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,true)},e.prototype.deleteRule=function(e){this.rules.splice(e,1),this.length--;},e.prototype.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),xe=g,De={isServer:!g,useCSSOMInjection:!S},Te=function(){function t(t,n,r){ void 0===t&&(t=P),void 0===n&&(n={});var o=this;this.options=e.__assign(e.__assign({},De),t),this.gs=n,this.names=new Map(r),this.server=!!t.isServer,!this.server&&g&&xe&&(xe=false,Ne(this)),ue(this,function(){return function(e){for(var t=e.getTag(),n=t.length,r="",o=function(n){var o=function(e){return me.get(e)}(n);if(void 0===o)return "continue";var s=e.names.get(o),i=t.getGroup(n);if(void 0===s||!s.size||0===i.length)return "continue";var a="".concat(h,".g").concat(n,'[id="').concat(o,'"]'),c="";void 0!==s&&s.forEach(function(e){e.length>0&&(c+="".concat(e,","));}),r+="".concat(i).concat(a,'{content:"').concat(c,'"}').concat(v);},s=0;s<n;s++)o(s);return r}(o)});}return t.registerId=function(e){return ge(e)},t.prototype.rehydrate=function(){!this.server&&g&&Ne(this);},t.prototype.reconstructWithOptions=function(n,r){return void 0===r&&(r=true),new t(e.__assign(e.__assign({},this.options),n),this.gs,r&&this.names||void 0)},t.prototype.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.prototype.getTag=function(){return this.tag||(this.tag=(e=function(e){var t=e.useCSSOMInjection,n=e.target;return e.isServer?new Oe(n):t?new Ae(n):new Ie(n)}(this.options),new he(e)));var e;},t.prototype.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.prototype.registerName=function(e,t){if(ge(e),this.names.has(e))this.names.get(e).add(t);else {var n=new Set;n.add(t),this.names.set(e,n);}},t.prototype.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(ge(e),n);},t.prototype.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear();},t.prototype.clearRules=function(e){this.getTag().clearGroup(ge(e)),this.clearNames(e);},t.prototype.clearTag=function(){this.tag=void 0;},t}(),Re=/&/g,je=/^\s*\/\/.*$/gm;function ke(e,t){return e.map(function(e){return "rule"===e.type&&(e.value="".concat(t," ").concat(e.value),e.value=e.value.replaceAll(",",",".concat(t," ")),e.props=e.props.map(function(e){return "".concat(t," ").concat(e)})),Array.isArray(e.children)&&"@keyframes"!==e.type&&(e.children=ke(e.children,t)),e})}function Ve(e){var t,n,r,o=void 0===e?P:e,s=o.options,i=void 0===s?P:s,a=o.plugins,c=void 0===a?N:a,u=function(e,r,o){return o.startsWith(n)&&o.endsWith(n)&&o.replaceAll(n,"").length>0?".".concat(t):e},l=c.slice();l.push(function(e){e.type===p.RULESET&&e.value.includes("&")&&(e.props[0]=e.props[0].replace(Re,n).replace(r,u));}),i.prefix&&l.push(p.prefixer),l.push(p.stringify);var d=function(e,o,s,a){ void 0===o&&(o=""),void 0===s&&(s=""),void 0===a&&(a="&"),t=a,n=o,r=new RegExp("\\".concat(n,"\\b"),"g");var c=e.replace(je,""),u=p.compile(s||o?"".concat(s," ").concat(o," { ").concat(c," }"):c);i.namespace&&(u=ke(u,i.namespace));var d=[];return p.serialize(u,p.middleware(l.concat(p.rulesheet(function(e){return d.push(e)})))),d};return d.hash=c.length?c.reduce(function(e,t){return t.name||de(15),M(e,t.name)},V).toString():"",d}var Me=new Te,Fe=Ve(),ze=u.default.createContext({shouldForwardProp:void 0,styleSheet:Me,stylis:Fe}),$e=ze.Consumer,Be=u.default.createContext(void 0);function Ge(){return n.useContext(ze)}function Le(e){var t=n.useState(e.stylisPlugins),r=t[0],o=t[1],s=Ge().styleSheet,i=n.useMemo(function(){var t=s;return e.sheet?t=e.sheet:e.target&&(t=t.reconstructWithOptions({target:e.target},false)),e.disableCSSOMInjection&&(t=t.reconstructWithOptions({useCSSOMInjection:false})),t},[e.disableCSSOMInjection,e.sheet,e.target,s]),a=n.useMemo(function(){return Ve({options:{namespace:e.namespace,prefix:e.enableVendorPrefixes},plugins:r})},[e.enableVendorPrefixes,e.namespace,r]);n.useEffect(function(){l.default(r,e.stylisPlugins)||o(e.stylisPlugins);},[e.stylisPlugins]);var c=n.useMemo(function(){return {shouldForwardProp:e.shouldForwardProp,styleSheet:i,stylis:a}},[e.shouldForwardProp,i,a]);return u.default.createElement(ze.Provider,{value:c},u.default.createElement(Be.Provider,{value:a},e.children))}var qe=function(){function e(e,t){var n=this;this.inject=function(e,t){ void 0===t&&(t=Fe);var r=n.name+t.hash;e.hasNameForId(n.id,r)||e.insertRules(n.id,r,t(n.rules,r,"@keyframes"));},this.name=e,this.id="sc-keyframes-".concat(e),this.rules=t,ue(this,function(){throw de(12,String(n.name))});}return e.prototype.getName=function(e){return void 0===e&&(e=Fe),this.name+e.hash},e}(),Ye=function(e){return e>="A"&&e<="Z"};function We(e){for(var t="",n=0;n<e.length;n++){var r=e[n];if(1===n&&"-"===r&&"-"===e[0])return e;Ye(r)?t+="-"+r.toLowerCase():t+=r;}return t.startsWith("ms-")?"-"+t:t}var He=function(e){return null==e||false===e||""===e},Ue=function(t){var n,r,o=[];for(var s in t){var i=t[s];t.hasOwnProperty(s)&&!He(i)&&(Array.isArray(i)&&i.isCss||re(i)?o.push("".concat(We(s),":"),i,";"):ae(i)?o.push.apply(o,e.__spreadArray(e.__spreadArray(["".concat(s," {")],Ue(i),false),["}"],false)):o.push("".concat(We(s),": ").concat((n=s,null==(r=i)||"boolean"==typeof r||""===r?"":"number"!=typeof r||0===r||n in d.default||n.startsWith("--")?String(r).trim():"".concat(r,"px")),";")));}return o};function Je(e,t,n,r){if(He(e))return [];if(oe(e))return [".".concat(e.styledComponentId)];if(re(e)){if(!re(s=e)||s.prototype&&s.prototype.isReactComponent||!t)return [e];var o=e(t);return "object"!=typeof o||Array.isArray(o)||o instanceof qe||ae(o)||null===o||console.error("".concat($(e)," is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.")),Je(o,t,n,r)}var s;return e instanceof qe?n?(e.inject(n,r),[e.getName(r)]):[e]:ae(e)?Ue(e):Array.isArray(e)?Array.prototype.concat.apply(N,e.map(function(e){return Je(e,t,n,r)})):[e.toString()]}function Xe(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(re(n)&&!oe(n))return  false}return  true}var Ze=F(m),Ke=function(){function e(e,t,n){this.rules=e,this.staticRulesId="",this.isStatic="production"==="development",this.componentId=t,this.baseHash=M(Ze,t),this.baseStyle=n,Te.registerId(t);}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.baseStyle?this.baseStyle.generateAndInjectStyles(e,t,n):"";if(this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(this.componentId,this.staticRulesId))r=se(r,this.staticRulesId);else {var o=ie(Je(this.rules,e,t,n)),s=j(M(this.baseHash,o)>>>0);if(!t.hasNameForId(this.componentId,s)){var i=n(o,".".concat(s),void 0,this.componentId);t.insertRules(this.componentId,s,i);}r=se(r,s),this.staticRulesId=s;}else {for(var a=M(this.baseHash,n.hash),c="",u=0;u<this.rules.length;u++){var l=this.rules[u];if("string"==typeof l)c+=l,(a=M(a,l));else if(l){var p=ie(Je(l,e,t,n));a=M(a,p+u),c+=p;}}if(c){var d=j(a>>>0);t.hasNameForId(this.componentId,d)||t.insertRules(this.componentId,d,n(c,".".concat(d),void 0,this.componentId)),r=se(r,d);}}return r},e}(),Qe=u.default.createContext(void 0),et=Qe.Consumer,tt={},nt=new Set;function rt(t,r,o){var s=oe(t),i=t,a=!B(t),l=r.attrs,p=void 0===l?N:l,d=r.componentId,h=void 0===d?function(e,t){var n="string"!=typeof e?"sc":x(e);tt[n]=(tt[n]||0)+1;var r="".concat(n,"-").concat(z(m+n+tt[n]));return t?"".concat(t,"-").concat(r):r}(r.displayName,r.parentComponentId):d,f=r.displayName,y=void 0===f?function(e){return B(e)?"styled.".concat(e):"Styled(".concat($(e),")")}(t):f,v=r.displayName&&r.componentId?"".concat(x(r.displayName),"-").concat(r.componentId):r.componentId||h,g=s&&i.attrs?i.attrs.concat(p).filter(Boolean):p,S=r.shouldForwardProp;if(s&&i.shouldForwardProp){var w=i.shouldForwardProp;if(r.shouldForwardProp){var _=r.shouldForwardProp;S=function(e,t){return w(e,t)&&_(e,t)};}else S=w;}var b=new Ke(o,v,s?i.componentStyle:void 0);function I(t,r){return function(t,r,o){var s=t.attrs,i=t.componentStyle,a=t.defaultProps,l=t.foldedComponentIds,p=t.styledComponentId,d=t.target,h=u.default.useContext(Qe),f=Ge(),y=t.shouldForwardProp||f.shouldForwardProp;n.useDebugValue(p);var m=C(r,h,a)||P,v=function(t,n,r){for(var o,s=e.__assign(e.__assign({},n),{className:void 0,theme:r}),i=0;i<t.length;i+=1){var a=re(o=t[i])?o(s):o;for(var c in a)s[c]="className"===c?se(s[c],a[c]):"style"===c?e.__assign(e.__assign({},s[c]),a[c]):a[c];}return n.className&&(s.className=se(s.className,n.className)),s}(s,r,m),g=v.as||d,S={};for(var w in v) void 0===v[w]||"$"===w[0]||"as"===w||"theme"===w&&v.theme===m||("forwardedAs"===w?S.as=v.forwardedAs:y&&!y(w,g)||(S[w]=v[w],y||"development"!=="development"||c.default(w)||nt.has(w)||!A.has(g)||(nt.add(w),console.warn('styled-components: it looks like an unknown prop "'.concat(w,'" is being sent through to the DOM, which will likely trigger a React console error. If you would like automatic filtering of unknown props, you can opt-into that behavior via `<StyleSheetManager shouldForwardProp={...}>` (connect an API like `@emotion/is-prop-valid`) or consider using transient props (`$` prefix for automatic filtering.)')))));var _=function(e,t){var r=Ge(),o=e.generateAndInjectStyles(t,r.styleSheet,r.stylis);return n.useDebugValue(o),o}(i,v);t.warnTooManyClasses&&t.warnTooManyClasses(_);var b=se(l,p);return _&&(b+=" "+_),v.className&&(b+=" "+v.className),S[B(g)&&!A.has(g)?"class":"className"]=b,o&&(S.ref=o),n.createElement(g,S)}(O,t,r)}I.displayName=y;var O=u.default.forwardRef(I);return O.attrs=g,O.componentStyle=b,O.displayName=y,O.shouldForwardProp=S,O.foldedComponentIds=s?se(i.foldedComponentIds,i.styledComponentId):"",O.styledComponentId=v,O.target=s?i.target:t,Object.defineProperty(O,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(e){this._foldedDefaultProps=s?function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];for(var r=0,o=t;r<o.length;r++)ce(e,o[r],true);return e}({},i.defaultProps,e):e;}}),(E(y,v),O.warnTooManyClasses=function(e,t){var n={},r=false;return function(o){if(!r&&(n[o]=true,Object.keys(n).length>=200)){var s=t?' with the id of "'.concat(t,'"'):"";console.warn("Over ".concat(200," classes were generated for component ").concat(e).concat(s,".\n")+"Consider using the attrs method, together with a style object for frequently changed styles.\nExample:\n  const Component = styled.div.attrs(props => ({\n    style: {\n      background: props.background,\n    },\n  }))`width: 100%;`\n\n  <Component />"),r=true,n={};}}}(y,v)),ue(O,function(){return ".".concat(O.styledComponentId)}),a&&ne(O,t,{attrs:true,componentStyle:true,displayName:true,foldedComponentIds:true,shouldForwardProp:true,styledComponentId:true,target:true}),O}function ot(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1)n.push(t[r],e[r+1]);return n}var st=function(e){return Object.assign(e,{isCss:true})};function it(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];if(re(t)||ae(t))return st(Je(ot(N,e.__spreadArray([t],n,true))));var o=t;return 0===n.length&&1===o.length&&"string"==typeof o[0]?Je(o):st(Je(ot(o,n)))}function at(t,n,r){if(void 0===r&&(r=P),!n)throw de(1,n);var o=function(o){for(var s=[],i=1;i<arguments.length;i++)s[i-1]=arguments[i];return t(n,r,it.apply(void 0,e.__spreadArray([o],s,false)))};return o.attrs=function(o){return at(t,n,e.__assign(e.__assign({},r),{attrs:Array.prototype.concat(r.attrs,o).filter(Boolean)}))},o.withConfig=function(o){return at(t,n,e.__assign(e.__assign({},r),o))},o}var ct=function(e){return at(rt,e)},ut=ct;A.forEach(function(e){ut[e]=ct(e);});var lt=function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=Xe(e),Te.registerId(this.componentId+1);}return e.prototype.createStyles=function(e,t,n,r){var o=r(ie(Je(this.rules,t,n,r)),""),s=this.componentId+e;n.insertRules(s,s,o);},e.prototype.removeStyles=function(e,t){t.clearRules(this.componentId+e);},e.prototype.renderStyles=function(e,t,n,r){e>2&&Te.registerId(this.componentId+e),this.removeStyles(e,n),this.createStyles(e,t,n,r);},e}(),pt=function(){function t(){var t=this;this._emitSheetCSS=function(){var e=t.instance.toString();if(!e)return "";var n=Pe(),r=ie([n&&'nonce="'.concat(n,'"'),"".concat(h,'="true"'),"".concat(y,'="').concat(m,'"')].filter(Boolean)," ");return "<style ".concat(r,">").concat(e,"</style>")},this.getStyleTags=function(){if(t.sealed)throw de(2);return t._emitSheetCSS()},this.getStyleElement=function(){var n;if(t.sealed)throw de(2);var r=t.instance.toString();if(!r)return [];var o=((n={})[h]="",n[y]=m,n.dangerouslySetInnerHTML={__html:r},n),s=Pe();return s&&(o.nonce=s),[u.default.createElement("style",e.__assign({},o,{key:"sc-0-0"}))]},this.seal=function(){t.sealed=true;},this.instance=new Te({isServer:true}),this.sealed=false;}return t.prototype.collectStyles=function(e){if(this.sealed)throw de(2);return u.default.createElement(Le,{sheet:this.instance},e)},t.prototype.interleaveWithNodeStream=function(e){throw de(3)},t}(),dt={StyleSheet:Te,mainSheet:Me};"undefined"!=typeof navigator&&"ReactNative"===navigator.product&&console.warn("It looks like you've imported 'styled-components' on React Native.\nPerhaps you're looking to import 'styled-components/native'?\nRead more about this at https://www.styled-components.com/docs/basics#react-native");var ht="__sc-".concat(h,"__");"undefined"!=typeof window&&(window[ht]||(window[ht]=0),1===window[ht]&&console.warn("It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles to not render properly, errors during the rehydration process, a missing theme prop, and makes your application bigger without good reason.\n\nSee https://s-c.sh/2BAXzed for more info."),window[ht]+=1),styledComponents_browser_cjs.ServerStyleSheet=pt,styledComponents_browser_cjs.StyleSheetConsumer=$e,styledComponents_browser_cjs.StyleSheetContext=ze,styledComponents_browser_cjs.StyleSheetManager=Le,styledComponents_browser_cjs.ThemeConsumer=et,styledComponents_browser_cjs.ThemeContext=Qe,styledComponents_browser_cjs.ThemeProvider=function(t){var r=u.default.useContext(Qe),o=n.useMemo(function(){return function(t,n){if(!t)throw de(14);if(re(t)){var r=t(n);if((null===r||Array.isArray(r)||"object"!=typeof r))throw de(7);return r}if(Array.isArray(t)||"object"!=typeof t)throw de(8);return n?e.__assign(e.__assign({},n),t):t}(t.theme,r)},[t.theme,r]);return t.children?u.default.createElement(Qe.Provider,{value:o},t.children):null},styledComponents_browser_cjs.__PRIVATE__=dt,styledComponents_browser_cjs.createGlobalStyle=function(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];var o=it.apply(void 0,e.__spreadArray([t],n,false)),s="sc-global-".concat(z(JSON.stringify(o))),i=new lt(o,s);E(s);var a=function(e){var t=Ge(),n=u.default.useContext(Qe),r=u.default.useRef(t.styleSheet.allocateGSInstance(s)).current;return u.default.Children.count(e.children)&&console.warn("The global style component ".concat(s," was given child JSX. createGlobalStyle does not render children.")),o.some(function(e){return "string"==typeof e&&-1!==e.indexOf("@import")})&&console.warn("Please do not use @import CSS syntax in createGlobalStyle at this time, as the CSSOM APIs we use in production do not handle it well. Instead, we recommend using a library such as react-helmet to inject a typical <link> meta tag to the stylesheet, or simply embedding it manually in your index.html <head> section for a simpler app."),t.styleSheet.server&&c(r,e,t.styleSheet,n,t.stylis),u.default.useLayoutEffect(function(){if(!t.styleSheet.server)return c(r,e,t.styleSheet,n,t.stylis),function(){return i.removeStyles(r,t.styleSheet)}},[r,e,t.styleSheet,n,t.stylis]),null};function c(t,n,r,o,s){if(i.isStatic)i.renderStyles(t,w,r,s);else {var c=e.__assign(e.__assign({},n),{theme:C(n,o,a.defaultProps)});i.renderStyles(t,c,r,s);}}return u.default.memo(a)},styledComponents_browser_cjs.css=it,_default = styledComponents_browser_cjs.default=ut,styledComponents_browser_cjs.isStyledComponent=oe,styledComponents_browser_cjs.keyframes=function(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];"undefined"!=typeof navigator&&"ReactNative"===navigator.product&&console.warn("`keyframes` cannot be used on ReactNative, only on the web. To do animation in ReactNative please use Animated.");var o=ie(it.apply(void 0,e.__spreadArray([t],n,false))),s=z(o);return new qe(s,o)},styledComponents_browser_cjs.styled=ut,styledComponents_browser_cjs.useTheme=function(){var e=n.useContext(Qe);if(!e)throw de(18);return e},styledComponents_browser_cjs.version=m,styledComponents_browser_cjs.withTheme=function(t){var n=u.default.forwardRef(function(n,r){var o=C(n,u.default.useContext(Qe),t.defaultProps);return void 0===o&&console.warn('[withTheme] You are not using a ThemeProvider nor passing a theme prop or a theme in defaultProps in component class "'.concat($(t),'"')),u.default.createElement(t,e.__assign({},n,{theme:o,ref:r}))});return n.displayName="WithTheme(".concat($(t),")"),ne(n,t)};

  const DashboardContainer = _default.div`
  padding: 0;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  min-height: 100vh;
  margin: -30px;
  padding: 30px;
`;
  const WelcomeSection = _default.div`
  background: rgba(255, 255, 255, 0.95);
  border-radius: 20px;
  padding: 40px;
  margin-bottom: 30px;
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
  background: linear-gradient(135deg, rgba(255,255,255,0.95) 0%, rgba(255,255,255,0.9) 100%);
`;
  const WelcomeTitle = _default.h1`
  font-size: 2.5rem;
  color: #667eea;
  margin-bottom: 10px;
  font-weight: 700;
`;
  const WelcomeSubtitle = _default.p`
  font-size: 1.1rem;
  color: #6b7280;
  margin: 0;
`;
  const StatsGrid = _default.div`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 20px;
  margin-bottom: 30px;
`;
  const StatCard = _default.div`
  background: white;
  border-radius: 16px;
  padding: 30px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
  transition: transform 0.3s, box-shadow 0.3s;
  border-left: 4px solid ${props => props.borderColor || '#667eea'};

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
  }
`;
  const StatIcon = _default.div`
  width: 60px;
  height: 60px;
  border-radius: 12px;
  background: ${props => props.bgColor || 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'};
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.8rem;
  margin-bottom: 15px;
  color: white;
`;
  const StatValue = _default.div`
  font-size: 2rem;
  font-weight: 700;
  color: #1f2937;
  margin-bottom: 5px;
`;
  const StatLabel = _default.div`
  font-size: 0.95rem;
  color: #6b7280;
  font-weight: 500;
`;
  const SectionCard = _default.div`
  background: white;
  border-radius: 16px;
  padding: 30px;
  margin-bottom: 20px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
`;
  const SectionTitle = _default.h3`
  font-size: 1.4rem;
  color: #1f2937;
  margin-bottom: 20px;
  font-weight: 600;
  display: flex;
  align-items: center;
  gap: 10px;
`;
  const OrderItem = _default.div`
  padding: 20px;
  border: 2px solid #f3f4f6;
  border-radius: 12px;
  margin-bottom: 15px;
  transition: all 0.3s;
  background: #fafbfc;

  &:hover {
    border-color: #667eea;
    background: white;
    transform: translateX(5px);
  }
`;
  const OrderHeader = _default.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10px;
`;
  const OrderNumber = _default.div`
  font-weight: 600;
  color: #667eea;
  font-size: 1.05rem;
`;
  const OrderDate = _default.div`
  font-size: 0.9rem;
  color: #6b7280;
`;
  const OrderDetails = _default.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 10px;
`;
  const QuickActionGrid = _default.div`
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 15px;
  margin-top: 20px;
`;
  const QuickActionButton = _default.a`
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 18px 24px;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border-radius: 12px;
  text-decoration: none;
  font-weight: 600;
  transition: all 0.3s;
  box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
    color: white;
  }
`;
  const EmptyState = _default.div`
  text-align: center;
  padding: 40px;
  color: #9ca3af;
`;
  const UserDashboard = () => {
    const [currentAdmin] = adminjs.useCurrentAdmin();
    const [orders, setOrders] = React$1.useState([]);
    const [stats, setStats] = React$1.useState({
      totalOrders: 0,
      pendingOrders: 0,
      totalSpent: 0
    });
    const [loading, setLoading] = React$1.useState(true);
    React$1.useEffect(() => {
      fetchUserData();
    }, []);
    const fetchUserData = async () => {
      try {
        // Fetch user's orders
        const response = await fetch('/admin/api/resources/Order/actions/list', {
          credentials: 'include'
        });
        if (response.ok) {
          const data = await response.json();
          const userOrders = data.records || [];
          setOrders(userOrders.slice(0, 5)); // Show only 5 recent orders

          // Calculate stats
          const totalOrders = userOrders.length;
          const pendingOrders = userOrders.filter(o => o.params?.status === 'pending' || o.params?.status === 'processing').length;
          const totalSpent = userOrders.reduce((sum, order) => sum + parseFloat(order.params?.totalAmount || 0), 0);
          setStats({
            totalOrders,
            pendingOrders,
            totalSpent
          });
        }
      } catch (error) {
        console.error('Error fetching user data:', error);
      } finally {
        setLoading(false);
      }
    };
    const getStatusBadge = status => {
      const statusColors = {
        pending: {
          bg: '#fef3c7',
          color: '#92400e',
          text: 'Pending'
        },
        processing: {
          bg: '#dbeafe',
          color: '#1e40af',
          text: 'Processing'
        },
        shipped: {
          bg: '#e0e7ff',
          color: '#4338ca',
          text: 'Shipped'
        },
        delivered: {
          bg: '#d1fae5',
          color: '#065f46',
          text: 'Delivered'
        },
        cancelled: {
          bg: '#fee2e2',
          color: '#991b1b',
          text: 'Cancelled'
        }
      };
      const config = statusColors[status] || statusColors.pending;
      return /*#__PURE__*/React__default.default.createElement("span", {
        style: {
          backgroundColor: config.bg,
          color: config.color,
          padding: '6px 14px',
          borderRadius: '20px',
          fontSize: '0.85rem',
          fontWeight: '600'
        }
      }, config.text);
    };
    return /*#__PURE__*/React__default.default.createElement(DashboardContainer, null, /*#__PURE__*/React__default.default.createElement(WelcomeSection, null, /*#__PURE__*/React__default.default.createElement(WelcomeTitle, null, "Welcome back, ", currentAdmin?.name || 'User', "! \uD83D\uDC4B"), /*#__PURE__*/React__default.default.createElement(WelcomeSubtitle, null, "Here's what's happening with your account today.")), /*#__PURE__*/React__default.default.createElement(StatsGrid, null, /*#__PURE__*/React__default.default.createElement(StatCard, {
      borderColor: "#667eea"
    }, /*#__PURE__*/React__default.default.createElement(StatIcon, {
      bgColor: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)"
    }, "\uD83D\uDCE6"), /*#__PURE__*/React__default.default.createElement(StatValue, null, stats.totalOrders), /*#__PURE__*/React__default.default.createElement(StatLabel, null, "Total Orders")), /*#__PURE__*/React__default.default.createElement(StatCard, {
      borderColor: "#f59e0b"
    }, /*#__PURE__*/React__default.default.createElement(StatIcon, {
      bgColor: "linear-gradient(135deg, #f59e0b 0%, #d97706 100%)"
    }, "\u23F3"), /*#__PURE__*/React__default.default.createElement(StatValue, null, stats.pendingOrders), /*#__PURE__*/React__default.default.createElement(StatLabel, null, "Pending Orders")), /*#__PURE__*/React__default.default.createElement(StatCard, {
      borderColor: "#10b981"
    }, /*#__PURE__*/React__default.default.createElement(StatIcon, {
      bgColor: "linear-gradient(135deg, #10b981 0%, #059669 100%)"
    }, "\uD83D\uDCB0"), /*#__PURE__*/React__default.default.createElement(StatValue, null, "$", stats.totalSpent.toFixed(2)), /*#__PURE__*/React__default.default.createElement(StatLabel, null, "Total Spent"))), /*#__PURE__*/React__default.default.createElement(SectionCard, null, /*#__PURE__*/React__default.default.createElement(SectionTitle, null, "\uD83D\uDECD\uFE0F Quick Actions"), /*#__PURE__*/React__default.default.createElement(QuickActionGrid, null, /*#__PURE__*/React__default.default.createElement(QuickActionButton, {
      href: "/admin/resources/Product"
    }, /*#__PURE__*/React__default.default.createElement("span", null, "\uD83C\uDFEA"), " Browse Products"), /*#__PURE__*/React__default.default.createElement(QuickActionButton, {
      href: "/admin/resources/Order/actions/new"
    }, /*#__PURE__*/React__default.default.createElement("span", null, "\u2795"), " Create New Order"), /*#__PURE__*/React__default.default.createElement(QuickActionButton, {
      href: "/admin/resources/Order"
    }, /*#__PURE__*/React__default.default.createElement("span", null, "\uD83D\uDCCB"), " View All Orders"))), /*#__PURE__*/React__default.default.createElement(SectionCard, null, /*#__PURE__*/React__default.default.createElement(SectionTitle, null, "\uD83D\uDCE6 Recent Orders"), loading ? /*#__PURE__*/React__default.default.createElement(EmptyState, null, "Loading orders...") : orders.length > 0 ? orders.map(order => /*#__PURE__*/React__default.default.createElement(OrderItem, {
      key: order.id
    }, /*#__PURE__*/React__default.default.createElement(OrderHeader, null, /*#__PURE__*/React__default.default.createElement(OrderNumber, null, "Order #", order.params?.orderNumber || order.id), getStatusBadge(order.params?.status)), /*#__PURE__*/React__default.default.createElement(OrderDate, null, order.params?.createdAt ? new Date(order.params.createdAt).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    }) : 'N/A'), /*#__PURE__*/React__default.default.createElement(OrderDetails, null, /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        fontSize: '0.9rem',
        color: '#6b7280'
      }
    }, "Payment: ", /*#__PURE__*/React__default.default.createElement("strong", {
      style: {
        color: '#1f2937'
      }
    }, order.params?.paymentStatus || 'N/A')), /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        fontSize: '1.1rem',
        fontWeight: '700',
        color: '#667eea'
      }
    }, "$", parseFloat(order.params?.totalAmount || 0).toFixed(2))))) : /*#__PURE__*/React__default.default.createElement(EmptyState, null, /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        fontSize: '3rem',
        marginBottom: '15px'
      }
    }, "\uD83D\uDED2"), /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        fontSize: '1.1rem',
        marginBottom: '10px',
        color: '#6b7280'
      }
    }, "No orders yet"), /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        fontSize: '0.9rem'
      }
    }, "Start shopping to see your orders here!"))), /*#__PURE__*/React__default.default.createElement(SectionCard, null, /*#__PURE__*/React__default.default.createElement(SectionTitle, null, "\uD83D\uDC64 Profile Information"), /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        display: 'grid',
        gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
        gap: '20px'
      }
    }, /*#__PURE__*/React__default.default.createElement("div", null, /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        fontSize: '0.85rem',
        color: '#6b7280',
        marginBottom: '5px',
        fontWeight: '600'
      }
    }, "Full Name"), /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        fontSize: '1.05rem',
        color: '#1f2937',
        fontWeight: '600'
      }
    }, currentAdmin?.name || 'N/A')), /*#__PURE__*/React__default.default.createElement("div", null, /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        fontSize: '0.85rem',
        color: '#6b7280',
        marginBottom: '5px',
        fontWeight: '600'
      }
    }, "Email Address"), /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        fontSize: '1.05rem',
        color: '#1f2937',
        fontWeight: '600'
      }
    }, currentAdmin?.email || 'N/A')), /*#__PURE__*/React__default.default.createElement("div", null, /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        fontSize: '0.85rem',
        color: '#6b7280',
        marginBottom: '5px',
        fontWeight: '600'
      }
    }, "Account Type"), /*#__PURE__*/React__default.default.createElement("div", {
      style: {
        fontSize: '1.05rem',
        color: '#1f2937',
        fontWeight: '600',
        textTransform: 'capitalize'
      }
    }, currentAdmin?.role || 'N/A')))));
  };

  const Dashboard = () => {
    const [currentAdmin] = adminjs.useCurrentAdmin();
    if (!currentAdmin) {
      return /*#__PURE__*/React.createElement("div", null, "Loading...");
    }

    // Route to appropriate dashboard based on role
    if (currentAdmin.role === 'admin') {
      return /*#__PURE__*/React.createElement(AdminDashboard, null);
    } else {
      return /*#__PURE__*/React.createElement(UserDashboard, null);
    }
  };

  const api = new adminjs.ApiClient();
  const SettingsPage = () => {
    const [settings, setSettings] = React$1.useState([]);
    const [loading, setLoading] = React$1.useState(true);
    const [message, setMessage] = React$1.useState(null);
    React$1.useEffect(() => {
      fetchSettings();
    }, []);
    const fetchSettings = async () => {
      try {
        setLoading(true);
        const response = await api.resourceAction({
          resourceId: 'Setting',
          actionName: 'list'
        });
        setSettings(response.data.records || []);
      } catch (err) {
        setMessage({
          type: 'error',
          content: 'Failed to load settings'
        });
      } finally {
        setLoading(false);
      }
    };
    if (loading) {
      return /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
        variant: "white",
        p: "xxl"
      }, /*#__PURE__*/React__default.default.createElement(designSystem.Loader, null));
    }
    return /*#__PURE__*/React__default.default.createElement(designSystem.Box, null, /*#__PURE__*/React__default.default.createElement(designSystem.H3, {
      mb: "xl"
    }, "System Settings"), message && /*#__PURE__*/React__default.default.createElement(designSystem.MessageBox, {
      mb: "xl",
      message: message.content,
      variant: message.type,
      onCloseClick: () => setMessage(null)
    }), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      variant: "white",
      p: "xl",
      border: "default",
      borderRadius: "lg"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H5, {
      mb: "default"
    }, "Configuration Settings"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "sm",
      color: "grey80",
      mb: "xl"
    }, "Manage your system configuration key-value pairs. These settings control various aspects of your eCommerce application."), settings.length === 0 ? /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "sm",
      color: "grey60"
    }, "No settings configured yet. Add settings from the Settings resource.") : /*#__PURE__*/React__default.default.createElement(designSystem.Box, null, settings.map(setting => /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      key: setting.id,
      p: "default",
      mb: "default",
      border: "default",
      borderRadius: "default",
      bg: "grey20"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      display: "flex",
      justifyContent: "space-between",
      alignItems: "center"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Box, null, /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontWeight: "bold",
      fontSize: "default"
    }, setting.params.key), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "sm",
      color: "grey60",
      mt: "sm"
    }, setting.params.description || 'No description'), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "sm",
      color: "grey80",
      mt: "sm"
    }, "Value: ", /*#__PURE__*/React__default.default.createElement("strong", null, setting.params.value)), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "xs",
      color: "grey60",
      mt: "sm"
    }, "Type: ", setting.params.type, " | Public: ", setting.params.isPublic ? 'Yes' : 'No')))))), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      mt: "xl"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Button, {
      as: "a",
      href: "/admin/resources/Setting",
      variant: "primary"
    }, "Manage Settings"))), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      variant: "white",
      mt: "xl",
      p: "xl",
      border: "default",
      borderRadius: "lg"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.H5, {
      mb: "default"
    }, "Setting Categories"), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      display: "grid",
      gridTemplateColumns: "repeat(auto-fit, minmax(200px, 1fr))",
      gridGap: "default",
      mt: "default"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      p: "default",
      border: "default",
      borderRadius: "default"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontWeight: "bold",
      fontSize: "sm"
    }, "General"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "xs",
      color: "grey60",
      mt: "sm"
    }, "Site name, logo, contact info")), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      p: "default",
      border: "default",
      borderRadius: "default"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontWeight: "bold",
      fontSize: "sm"
    }, "Email"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "xs",
      color: "grey60",
      mt: "sm"
    }, "SMTP, notification settings")), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      p: "default",
      border: "default",
      borderRadius: "default"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontWeight: "bold",
      fontSize: "sm"
    }, "Payment"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "xs",
      color: "grey60",
      mt: "sm"
    }, "Payment gateway configs")), /*#__PURE__*/React__default.default.createElement(designSystem.Box, {
      p: "default",
      border: "default",
      borderRadius: "default"
    }, /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontWeight: "bold",
      fontSize: "sm"
    }, "Shipping"), /*#__PURE__*/React__default.default.createElement(designSystem.Text, {
      fontSize: "xs",
      color: "grey60",
      mt: "sm"
    }, "Shipping methods, rates")))));
  };

  const Container$1 = _default.div`
  background: #f5f5f5;
  min-height: 100vh;
  padding: 20px;
`;
  const Header$1 = _default.div`
  background: white;
  padding: 20px 30px;
  margin-bottom: 30px;
  border-bottom: 1px solid #e5e5e5;
`;
  const Title$1 = _default.h1`
  font-size: 1.75rem;
  color: #111;
  margin: 0 0 5px 0;
  font-weight: 600;
`;
  const Subtitle$1 = _default.p`
  color: #666;
  margin: 0;
  font-size: 0.95rem;
`;
  const ProductGrid$1 = _default.div`
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 20px;
  max-width: 1400px;
  margin: 0 auto;
`;
  const ProductCard$1 = _default.div`
  background: white;
  border-radius: 8px;
  overflow: hidden;
  border: 1px solid #e5e5e5;
  transition: all 0.2s ease;
  display: flex;
  flex-direction: column;

  &:hover {
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    border-color: #d5d5d5;
  }
`;
  const ProductImage$1 = _default.div`
  height: 220px;
  background: #fafafa;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 4rem;
  position: relative;
  border-bottom: 1px solid #e5e5e5;
`;
  const StockBadge$1 = _default.div`
  position: absolute;
  top: 12px;
  right: 12px;
  background: ${p => p.inStock ? '#067d62' : '#cc0c39'};
  color: white;
  padding: 4px 10px;
  border-radius: 4px;
  font-size: 0.75rem;
  font-weight: 500;
`;
  const ProductInfo$1 = _default.div`
  padding: 16px;
  flex: 1;
  display: flex;
  flex-direction: column;
`;
  const ProductName$1 = _default.h3`
  font-size: 1rem;
  color: #111;
  margin: 0 0 8px 0;
  font-weight: 500;
  line-height: 1.3;
`;
  const ProductDesc$1 = _default.p`
  color: #666;
  font-size: 0.85rem;
  margin: 0 0 12px 0;
  line-height: 1.4;
  height: 38px;
  overflow: hidden;
`;
  const Price$1 = _default.div`
  font-size: 1.5rem;
  font-weight: 600;
  color: #111;
  margin-bottom: 4px;
`;
  const SKU$1 = _default.div`
  font-size: 0.8rem;
  color: #888;
  margin-bottom: 16px;
`;
  const QuantityBox$1 = _default.div`
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 12px;
`;
  const QtyLabel$1 = _default.span`
  font-size: 0.9rem;
  color: #111;
  font-weight: 500;
  margin-right: 5px;
`;
  const QtyButton$1 = _default.button`
  width: 32px;
  height: 32px;
  border-radius: 4px;
  border: 1px solid #d5d5d5;
  background: white;
  color: #111;
  font-size: 1.1rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;

  &:hover {
    background: #f0f0f0;
    border-color: #999;
  }

  &:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }
`;
  const QtyDisplay$1 = _default.div`
  font-size: 1rem;
  font-weight: 500;
  min-width: 30px;
  text-align: center;
  color: #111;
`;
  const TotalPrice$1 = _default.div`
  margin-left: auto;
  font-size: 1rem;
  font-weight: 600;
  color: #111;
`;
  const ButtonGroup$1 = _default.div`
  display: flex;
  gap: 10px;
  margin-top: auto;
`;
  const CartButton$1 = _default.button`
  flex: 1;
  background: white;
  color: #111;
  border: 1px solid #d5d5d5;
  padding: 12px 16px;
  border-radius: 20px;
  font-weight: 500;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.2s;

  &:hover {
    background: #f7f7f7;
    border-color: #111;
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
`;
  const BuyButton$1 = _default.button`
  flex: 1;
  background: #ffd814;
  color: #111;
  border: 1px solid #fcd200;
  padding: 12px 16px;
  border-radius: 20px;
  font-weight: 600;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.2s;

  &:hover {
    background: #f7ca00;
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
`;
  const Loading = _default.div`
  text-align: center;
  padding: 60px 20px;
  font-size: 1.2rem;
  color: #666;
`;
  const getIcon$1 = name => {
    if (name.includes('MacBook') || name.includes('iPhone')) return '💻';
    if (name.includes('TV') || name.includes('Headphones')) return '📱';
    if (name.includes('T-Shirt') || name.includes('Jeans') || name.includes('Jacket')) return '👕';
    if (name.includes('Book')) return '📚';
    if (name.includes('Coffee')) return '☕';
    if (name.includes('Yoga')) return '🧘';
    return '🛍️';
  };
  const ProductCatalog = () => {
    const [products, setProducts] = React$1.useState([]);
    const [loading, setLoading] = React$1.useState(true);
    const [quantities, setQuantities] = React$1.useState({});
    React$1.useEffect(() => {
      const fetchProducts = async () => {
        try {
          const api = new adminjs.ApiClient();
          const response = await api.resourceAction({
            resourceId: 'Product',
            actionName: 'list'
          });
          setProducts(response.data.records || []);
        } catch (error) {
          console.error('Failed to fetch products:', error);
        } finally {
          setLoading(false);
        }
      };
      fetchProducts();
    }, []);
    const updateQty = (id, change) => {
      setQuantities(prev => {
        const current = prev[id] || 1;
        const product = products.find(p => p.id === id);
        const max = product?.params?.stock || 999;
        const newQty = Math.max(1, Math.min(current + change, max));
        return {
          ...prev,
          [id]: newQty
        };
      });
    };
    const addToCart = product => {
      const qty = quantities[product.id] || 1;
      alert(`✅ Added ${qty}x ${product.params.name} to cart!\n\nTotal: $${(product.params.price * qty).toFixed(2)}`);
    };
    const buyNow = product => {
      const qty = quantities[product.id] || 1;
      const total = product.params.price * qty;
      if (confirm(`🛒 Buy ${qty}x ${product.params.name}\n\nTotal: $${total.toFixed(2)}\n\nPayment Method: Cash on Delivery\n\nConfirm order?`)) {
        alert('✅ Order placed successfully!\n\n💵 Payment: Cash on Delivery\n📦 We will contact you shortly!');
      }
    };
    if (loading) {
      return /*#__PURE__*/React.createElement(Container$1, null, /*#__PURE__*/React.createElement(Loading, null, "Loading products..."));
    }
    return /*#__PURE__*/React.createElement(Container$1, null, /*#__PURE__*/React.createElement(Header$1, null, /*#__PURE__*/React.createElement(Title$1, null, "Product Catalog"), /*#__PURE__*/React.createElement(Subtitle$1, null, "Browse our collection - ", products.length, " products available")), /*#__PURE__*/React.createElement(ProductGrid$1, null, products.map(product => {
      const qty = quantities[product.id] || 1;
      const inStock = product.params.stock > 0;
      return /*#__PURE__*/React.createElement(ProductCard$1, {
        key: product.id
      }, /*#__PURE__*/React.createElement(ProductImage$1, null, /*#__PURE__*/React.createElement("span", null, getIcon$1(product.params.name)), /*#__PURE__*/React.createElement(StockBadge$1, {
        inStock: inStock
      }, inStock ? `In Stock: ${product.params.stock}` : 'Out of Stock')), /*#__PURE__*/React.createElement(ProductInfo$1, null, /*#__PURE__*/React.createElement(ProductName$1, null, product.params.name), /*#__PURE__*/React.createElement(ProductDesc$1, null, product.params.description || 'Premium quality product'), /*#__PURE__*/React.createElement(Price$1, null, "$", parseFloat(product.params.price).toFixed(2)), /*#__PURE__*/React.createElement(SKU$1, null, "SKU: ", product.params.sku), inStock && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(QuantityBox$1, null, /*#__PURE__*/React.createElement(QtyLabel$1, null, "Qty:"), /*#__PURE__*/React.createElement(QtyButton$1, {
        onClick: () => updateQty(product.id, -1),
        disabled: qty <= 1
      }, "\u2212"), /*#__PURE__*/React.createElement(QtyDisplay$1, null, qty), /*#__PURE__*/React.createElement(QtyButton$1, {
        onClick: () => updateQty(product.id, 1),
        disabled: qty >= product.params.stock
      }, "+"), /*#__PURE__*/React.createElement(TotalPrice$1, null, "$", (product.params.price * qty).toFixed(2))), /*#__PURE__*/React.createElement(ButtonGroup$1, null, /*#__PURE__*/React.createElement(CartButton$1, {
        onClick: () => addToCart(product)
      }, "Add to Cart"), /*#__PURE__*/React.createElement(BuyButton$1, {
        onClick: () => buyNow(product)
      }, "Buy Now"))), !inStock && /*#__PURE__*/React.createElement(BuyButton$1, {
        disabled: true,
        style: {
          width: '100%'
        }
      }, "Out of Stock")));
    })));
  };

  const Container = _default.div`
  background: #f5f5f5;
  min-height: 100vh;
  padding: 20px;
`;
  const Header = _default.div`
  background: white;
  padding: 20px 30px;
  margin-bottom: 30px;
  border-bottom: 1px solid #e5e5e5;
`;
  const Title = _default.h1`
  font-size: 1.75rem;
  color: #111;
  margin: 0 0 5px 0;
  font-weight: 600;
`;
  const Subtitle = _default.p`
  color: #666;
  margin: 0;
  font-size: 0.95rem;
`;
  const ProductGrid = _default.div`
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 20px;
  max-width: 1400px;
  margin: 0 auto;
`;
  const ProductCard = _default.div`
  background: white;
  border-radius: 8px;
  overflow: hidden;
  border: 1px solid #e5e5e5;
  transition: all 0.2s ease;
  display: flex;
  flex-direction: column;

  &:hover {
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    border-color: #d5d5d5;
  }
`;
  const ProductImage = _default.div`
  height: 220px;
  background: #fafafa;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 4rem;
  position: relative;
  border-bottom: 1px solid #e5e5e5;
`;
  const StockBadge = _default.div`
  position: absolute;
  top: 12px;
  right: 12px;
  background: ${p => p.$inStock ? '#067d62' : '#cc0c39'};
  color: white;
  padding: 4px 10px;
  border-radius: 4px;
  font-size: 0.75rem;
  font-weight: 500;
`;
  const ProductInfo = _default.div`
  padding: 16px;
  flex: 1;
  display: flex;
  flex-direction: column;
`;
  const ProductName = _default.h3`
  font-size: 1rem;
  color: #111;
  margin: 0 0 8px 0;
  font-weight: 500;
  line-height: 1.3;
`;
  const ProductDesc = _default.p`
  color: #666;
  font-size: 0.85rem;
  margin: 0 0 12px 0;
  line-height: 1.4;
  height: 38px;
  overflow: hidden;
`;
  const Price = _default.div`
  font-size: 1.5rem;
  font-weight: 600;
  color: #111;
  margin-bottom: 4px;
`;
  const SKU = _default.div`
  font-size: 0.8rem;
  color: #888;
  margin-bottom: 16px;
`;
  const QuantityBox = _default.div`
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 12px;
`;
  const QtyLabel = _default.span`
  font-size: 0.9rem;
  color: #111;
  font-weight: 500;
  margin-right: 5px;
`;
  const QtyButton = _default.button`
  width: 32px;
  height: 32px;
  border-radius: 4px;
  border: 1px solid #d5d5d5;
  background: white;
  color: #111;
  font-size: 1.1rem;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;

  &:hover {
    background: #f0f0f0;
    border-color: #999;
  }

  &:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }
`;
  const QtyDisplay = _default.div`
  font-size: 1rem;
  font-weight: 500;
  min-width: 30px;
  text-align: center;
  color: #111;
`;
  const TotalPrice = _default.div`
  margin-left: auto;
  font-size: 1rem;
  font-weight: 600;
  color: #111;
`;
  const ButtonGroup = _default.div`
  display: flex;
  gap: 10px;
  margin-top: auto;
`;
  const CartButton = _default.button`
  flex: 1;
  background: white;
  color: #111;
  border: 1px solid #d5d5d5;
  padding: 12px 16px;
  border-radius: 20px;
  font-weight: 500;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.2s;

  &:hover {
    background: #f7f7f7;
    border-color: #111;
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
`;
  const BuyButton = _default.button`
  flex: 1;
  background: #ffd814;
  color: #111;
  border: 1px solid #fcd200;
  padding: 12px 16px;
  border-radius: 20px;
  font-weight: 600;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.2s;

  &:hover {
    background: #f7ca00;
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
`;
  const getIcon = name => {
    if (!name) return '🛍️';
    if (name.includes('MacBook') || name.includes('iPhone')) return '💻';
    if (name.includes('TV') || name.includes('Headphones')) return '📱';
    if (name.includes('T-Shirt') || name.includes('Jeans') || name.includes('Jacket')) return '👕';
    if (name.includes('Book')) return '📚';
    if (name.includes('Coffee')) return '☕';
    if (name.includes('Yoga')) return '🧘';
    return '🛍️';
  };
  const ProductListCards = () => {
    const {
      records,
      loading
    } = adminjs.useRecords();
    const [quantities, setQuantities] = React$1.useState({});
    const {
      translateMessage
    } = adminjs.useTranslation();
    const updateQty = (id, change) => {
      setQuantities(prev => {
        const current = prev[id] || 1;
        const product = records.find(r => r.id === id);
        const max = product?.params?.stock || 999;
        const newQty = Math.max(1, Math.min(current + change, max));
        return {
          ...prev,
          [id]: newQty
        };
      });
    };
    const addToCart = product => {
      const qty = quantities[product.id] || 1;
      alert(`✅ Added ${qty}x ${product.params.name} to cart!\n\nTotal: $${(product.params.price * qty).toFixed(2)}`);
    };
    const buyNow = product => {
      const qty = quantities[product.id] || 1;
      const total = product.params.price * qty;
      if (confirm(`🛒 Buy ${qty}x ${product.params.name}\n\nTotal: $${total.toFixed(2)}\n\nPayment Method: Cash on Delivery\n\nConfirm order?`)) {
        alert('✅ Order placed successfully!\n\n💵 Payment: Cash on Delivery\n📦 We will contact you shortly!');
      }
    };
    if (loading) {
      return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Title, null, "Product Catalog"), /*#__PURE__*/React.createElement(Subtitle, null, "Loading products...")));
    }
    if (!records || records.length === 0) {
      return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Title, null, "Product Catalog"), /*#__PURE__*/React.createElement(Subtitle, null, "No products available")));
    }
    return /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(Title, null, "Product Catalog"), /*#__PURE__*/React.createElement(Subtitle, null, "Browse our collection - ", records.length, " products available")), /*#__PURE__*/React.createElement(ProductGrid, null, records.map(product => {
      const qty = quantities[product.id] || 1;
      const inStock = product.params.stock > 0;
      return /*#__PURE__*/React.createElement(ProductCard, {
        key: product.id
      }, /*#__PURE__*/React.createElement(ProductImage, null, /*#__PURE__*/React.createElement("span", null, getIcon(product.params.name)), /*#__PURE__*/React.createElement(StockBadge, {
        $inStock: inStock
      }, inStock ? `In Stock: ${product.params.stock}` : 'Out of Stock')), /*#__PURE__*/React.createElement(ProductInfo, null, /*#__PURE__*/React.createElement(ProductName, null, product.params.name), /*#__PURE__*/React.createElement(ProductDesc, null, product.params.description || 'Premium quality product'), /*#__PURE__*/React.createElement(Price, null, "$", parseFloat(product.params.price).toFixed(2)), /*#__PURE__*/React.createElement(SKU, null, "SKU: ", product.params.sku), inStock && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(QuantityBox, null, /*#__PURE__*/React.createElement(QtyLabel, null, "Qty:"), /*#__PURE__*/React.createElement(QtyButton, {
        onClick: () => updateQty(product.id, -1),
        disabled: qty <= 1
      }, "\u2212"), /*#__PURE__*/React.createElement(QtyDisplay, null, qty), /*#__PURE__*/React.createElement(QtyButton, {
        onClick: () => updateQty(product.id, 1),
        disabled: qty >= product.params.stock
      }, "+"), /*#__PURE__*/React.createElement(TotalPrice, null, "$", (product.params.price * qty).toFixed(2))), /*#__PURE__*/React.createElement(ButtonGroup, null, /*#__PURE__*/React.createElement(CartButton, {
        onClick: () => addToCart(product)
      }, "Add to Cart"), /*#__PURE__*/React.createElement(BuyButton, {
        onClick: () => buyNow(product)
      }, "Buy Now"))), !inStock && /*#__PURE__*/React.createElement(BuyButton, {
        disabled: true,
        style: {
          width: '100%'
        }
      }, "Out of Stock")));
    })));
  };

  AdminJS.UserComponents = {};
  AdminJS.UserComponents.Dashboard = Dashboard;
  AdminJS.UserComponents.AdminDashboard = AdminDashboard;
  AdminJS.UserComponents.UserDashboard = UserDashboard;
  AdminJS.UserComponents.SettingsPage = SettingsPage;
  AdminJS.UserComponents.ProductCatalog = ProductCatalog;
  AdminJS.UserComponents.ProductListCards = ProductListCards;

})(AdminJS, React, AdminJSDesignSystem);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
